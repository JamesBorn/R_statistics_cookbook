V4 =runif(1000)*10 + V3
V5 =runif(1000)*100
Residuals =runif(1000)*100
Y = V1 + V2 + V3 + V4 + Residuals
coefs_lm <-lm(Y ~ V1 + V2 + V3 + V4 + V5)$coefficients
coefs_rd <-glmnet(cbind(V1 ,V2,V3,V4 ,V5),Y,lambda=lambda,alpha=1)$beta
frame1 <-data.frame(V1=coefs_lm[2], V2=coefs_lm[3],V3=coefs_lm[4], V4=coefs_lm[5],V5=coefs_lm[6],method="lm")
frame2 <-data.frame(V1=coefs_rd[1], V2=coefs_rd[2],V3=coefs_rd[3], V4=coefs_rd[4],V5=coefs_rd[5],method="lasso")
coeffs_total<-rbind(coeffs_total,frame1,frame2)
}
transposed_data= gather(coeffs_total,"variable","value",1:5)
print(transposed_data%>%group_by(variable,method) %>% summarise(median=median(value)))
ggplot(transposed_data,aes(x=variable, y=value, fill=method)) +geom_boxplot()
}
get_results(8)
library(MASS)
library(tidyr)
library(ggplot2)
library(glmnet)
library(dplyr)
set.seed(100)
get_results<- function(lambda){
coeffs_total=data.frame(V1=numeric(),V2=numeric(),V3=numeric(),V4=numeric(),V5=numeric())
for (q in 1:100){
V1 =runif(1000)*100
V2 =runif(1000)*10 + V1
V3 =runif(1000)*100
V4 =runif(1000)*10 + V3
V5 =runif(1000)*100
Residuals =runif(1000)*100
Y = V1 + V2 + V3 + V4 + Residuals
coefs_lm <-lm(Y ~ V1 + V2 + V3 + V4 + V5)$coefficients
coefs_rd <-glmnet(cbind(V1 ,V2,V3,V4 ,V5),Y,lambda=lambda,alpha=1)$beta
frame1 <-data.frame(V1=coefs_lm[2], V2=coefs_lm[3],V3=coefs_lm[4], V4=coefs_lm[5],V5=coefs_lm[6],method="lm")
frame2 <-data.frame(V1=coefs_rd[1], V2=coefs_rd[2],V3=coefs_rd[3], V4=coefs_rd[4],V5=coefs_rd[5],method="lasso")
coeffs_total<-rbind(coeffs_total,frame1,frame2)
}
transposed_data= gather(coeffs_total,"variable","value",1:5)
print(transposed_data%>%group_by(variable,method) %>% summarise(median=median(value)))
ggplot(transposed_data,aes(x=variable, y=value, fill=method)) +geom_boxplot()
}
get_results(8)
get_results(0.4)
get_results(0.0004)
get_results(0.000004)
get_results(19)
get_results(0.01)
library(MASS)
library(tidyr)
library(ggplot2)
library(glmnet)
library(dplyr)
set.seed(100)
get_results<- function(lambda){
coeffs_total=data.frame(V1=numeric(),V2=numeric(),V3=numeric(),V4=numeric(),V5=numeric())
for (q in 1:100){
V1 =runif(1000)*100
V2 =runif(1000)*10 + V1
V3 =runif(1000)*100
V4 =runif(1000)*10 + V3
V5 =runif(1000)*100
Residuals =runif(1000)*100
Y = V1 + V2 + V3 + V4 + Residuals
coefs_lm <-lm(Y ~ V1 + V2 + V3 + V4 + V5)$coefficients
coefs_rd <-glmnet(cbind(V1 ,V2,V3,V4 ,V5),Y,lambda=lambda,alpha=0)$beta
frame1 <-data.frame(V1=coefs_lm[2], V2=coefs_lm[3],V3=coefs_lm[4], V4=coefs_lm[5],V5=coefs_lm[6],method="lm")
frame2 <-data.frame(V1=coefs_rd[1], V2=coefs_rd[2],V3=coefs_rd[3], V4=coefs_rd[4],V5=coefs_rd[5],method="ridge")
coeffs_total<-rbind(coeffs_total,frame1,frame2)
}
transposed_data= gather(coeffs_total,"variable","value",1:5)
print(transposed_data%>%group_by(variable,method) %>% summarise(median=median(value)))
ggplot(transposed_data,aes(x=variable, y=value, fill=method)) +geom_boxplot()
}
get_results(8)
library(MASS)
library(tidyr)
library(ggplot2)
library(glmnet)
library(dplyr)
set.seed(100)
get_results<- function(lambda){
coeffs_total=data.frame(V1=numeric(),V2=numeric(),V3=numeric(),V4=numeric(),V5=numeric())
for (q in 1:100){
V1 =runif(1000)*100
V2 =runif(1000)*10 + V1
V3 =runif(1000)*100
V4 =runif(1000)*10 + V3
V5 =runif(1000)*100
Residuals =runif(1000)*100
Y = V1 + V2 + V3 + V4 + Residuals
coefs_lm <-lm(Y ~ V1 + V2 + V3 + V4 + V5)$coefficients
coefs_rd <-glmnet(cbind(V1 ,V2,V3,V4 ,V5),Y,lambda=lambda,alpha=0)$beta
frame1 <-data.frame(V1=coefs_lm[2], V2=coefs_lm[3],V3=coefs_lm[4], V4=coefs_lm[5],V5=coefs_lm[6],method="lm")
frame2 <-data.frame(V1=coefs_rd[1], V2=coefs_rd[2],V3=coefs_rd[3], V4=coefs_rd[4],V5=coefs_rd[5],method="ridge")
coeffs_total<-rbind(coeffs_total,frame1,frame2)
}
transposed_data= gather(coeffs_total,"variable","value",1:5)
print(transposed_data%>%group_by(variable,method) %>% summarise(median=median(value)))
ggplot(transposed_data,aes(x=variable, y=value, fill=method)) +geom_boxplot()
}
get_results(0.1)
library(MASS)
library(tidyr)
library(ggplot2)
library(glmnet)
library(dplyr)
set.seed(100)
get_results<- function(lambda){
coeffs_total=data.frame(V1=numeric(),V2=numeric(),V3=numeric(),V4=numeric(),V5=numeric())
for (q in 1:100){
V1 =runif(1000)*100
V2 =runif(1000)*10 + V1
V3 =runif(1000)*100
V4 =runif(1000)*10 + V3
V5 =runif(1000)*100
Residuals =runif(1000)*100
Y = V1 + V2 + V3 + V4 + Residuals
coefs_lm <-lm(Y ~ V1 + V2 + V3 + V4 + V5)$coefficients
coefs_rd <-glmnet(cbind(V1 ,V2,V3,V4 ,V5),Y,lambda=lambda,alpha=1)$beta
frame1 <-data.frame(V1=coefs_lm[2], V2=coefs_lm[3],V3=coefs_lm[4], V4=coefs_lm[5],V5=coefs_lm[6],method="lm")
frame2 <-data.frame(V1=coefs_rd[1], V2=coefs_rd[2],V3=coefs_rd[3], V4=coefs_rd[4],V5=coefs_rd[5],method="lasso")
coeffs_total<-rbind(coeffs_total,frame1,frame2)
}
transposed_data= gather(coeffs_total,"variable","value",1:5)
print(transposed_data%>%group_by(variable,method) %>% summarise(median=median(value)))
ggplot(transposed_data,aes(x=variable, y=value, fill=method)) +geom_boxplot()
}
get_results(8)
library(MASS)
library(tidyr)
library(ggplot2)
library(glmnet)
library(dplyr)
set.seed(100)
get_results<- function(lambda){
coeffs_total=data.frame(V1=numeric(),V2=numeric(),V3=numeric(),V4=numeric(),V5=numeric())
for (q in 1:100){
V1 =runif(1000)*100
V2 =runif(1000)*10 + V1
V3 =runif(1000)*100
V4 =runif(1000)*10 + V3
V5 =runif(1000)*100
Residuals =runif(1000)*100
Y = V1 + V2 + V3 + V4 + Residuals
coefs_lm <-lm(Y ~ V1 + V2 + V3 + V4 + V5)$coefficients
coefs_rd <-glmnet(cbind(V1 ,V2,V3,V4 ,V5),Y,lambda=lambda,alpha=1)$beta
frame1 <-data.frame(V1=coefs_lm[2], V2=coefs_lm[3],V3=coefs_lm[4], V4=coefs_lm[5],V5=coefs_lm[6],method="lm")
frame2 <-data.frame(V1=coefs_rd[1], V2=coefs_rd[2],V3=coefs_rd[3], V4=coefs_rd[4],V5=coefs_rd[5],method="lasso")
coeffs_total<-rbind(coeffs_total,frame1,frame2)
}
transposed_data= gather(coeffs_total,"variable","value",1:5)
print(transposed_data%>%group_by(variable,method) %>% summarise(median=median(value)))
ggplot(transposed_data,aes(x=variable, y=value, fill=method)) +geom_boxplot()
}
get_results(0.1)
library(MASS)
library(tidyr)
library(ggplot2)
library(glmnet)
library(dplyr)
set.seed(100)
get_results<- function(lambda){
coeffs_total=data.frame(V1=numeric(),V2=numeric(),V3=numeric(),V4=numeric(),V5=numeric())
for (q in 1:100){
V1 =runif(1000)*100
V2 =runif(1000)*10 + V1
V3 =runif(1000)*100
V4 =runif(1000)*10 + V3
V5 =runif(1000)*100
Residuals =runif(1000)*100
Y = V1 + V2 + V3 + V4 + Residuals
coefs_lm <-lm(Y ~ V1 + V2 + V3 + V4 + V5)$coefficients
coefs_rd <-glmnet(cbind(V1 ,V2,V3,V4 ,V5),Y,lambda=lambda,alpha=1)$beta
frame1 <-data.frame(V1=coefs_lm[2], V2=coefs_lm[3],V3=coefs_lm[4], V4=coefs_lm[5],V5=coefs_lm[6],method="lm")
frame2 <-data.frame(V1=coefs_rd[1], V2=coefs_rd[2],V3=coefs_rd[3], V4=coefs_rd[4],V5=coefs_rd[5],method="lasso")
coeffs_total<-rbind(coeffs_total,frame1,frame2)
}
transposed_data= gather(coeffs_total,"variable","value",1:5)
print(transposed_data%>%group_by(variable,method) %>% summarise(median=median(value)))
ggplot(transposed_data,aes(x=variable, y=value, fill=method)) +geom_boxplot()
}
get_results(8)
get_results(0.1)
get_results(0.0000001)
get_results(8)
get_results(0.1)
data = read.csv("./house_prices_aug.csv")
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
leveragePlots(model)
library(car)
data = read.csv("./house_prices_aug.csv")
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
leveragePlots(model)
data = read.csv("./house_prices_aug.csv")
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
leveragePlots(model)
data = read.csv("./house_prices_aug.csv")
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
leveragePlots(model)
View(data)
data = read.csv("./house_prices_aug.csv")
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
leveragePlots(model)
outlierTest(model)
plot(hatvalues(model), type = "h")
cooksd <- sort(cooks.distance(model))
cutoff <- 4/((nrow(data)-length(model$coefficients)-1))
plot(model, which=4, cook.levels=cutoff)
plot(model)
data = read.csv("./house_prices_aug.csv")
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
leveragePlots(model)
outlierTest(model)
plot(hatvalues(model), type = "h")
cooksd <- sort(cooks.distance(model))
cutoff <- 4/((nrow(data)-length(model$coefficients)-1))
plot(model, which=4, cook.levels=cutoff)
plot(model)
data = read.csv("./house_prices_aug.csv")
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
leveragePlots(model)
outlierTest(model)
plot(hatvalues(model), type = "h")
cooksd <- sort(cooks.distance(model))
cutoff <- 4/((nrow(data)-length(model$coefficients)-1))
plot(model, which=4, cook.levels=cutoff)
plot(model)
data = read.csv("./house_prices_aug.csv")
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
leveragePlots(model)
outlierTest(model)
plot(hatvalues(model), type = "h")
cooksd <- sort(cooks.distance(model))
cutoff <- 4/((nrow(data)-length(model$coefficients)-1))
plot(model, which=4, cook.levels=cutoff)
plot(model)
plot(model)
leveragePlots(model)
data = read.csv("./house_prices_aug.csv")
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
plot(model)
leveragePlots(model)
View(data)
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
plot(model)
leveragePlots(model)
outlierTest(model)
plot(hatvalues(model), type = "h")
cooksd <- sort(cooks.distance(model))
cutoff <- 4/((nrow(data)-length(model$coefficients)-1))
plot(model, which=4, cook.levels=cutoff)
data = read.csv("./house_prices_aug.csv")
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
plot(model)
leveragePlots(model)
outlierTest(model)
View(leveragePlots)
help(leveragePlots)
leveragePlots(model)
plot(model)
outlierTest(model)
plot(hatvalues(model), type = "h")
cooksd <- sort(cooks.distance(model))
cutoff <- 4/((nrow(data)-length(model$coefficients)-1))
plot(model, which=4, cook.levels=cutoff)
model2 = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data[-408,])
model
model2
summary(model2)
model
model2
View(data)
model
model2
plot(model)
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
plot(model)
predict(model,data[1,])
data[1,]
data = read.csv("./house_prices_aug.csv")
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
plot(model)
data = read.csv("./house_prices_aug.csv")
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
plot(model)
leveragePlots(model)
library(car)
data = read.csv("./house_prices_aug.csv")
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
plot(model)
leveragePlots(model)
outlierTest(model)
cooksd <- sort(cooks.distance(model))
cutoff <- 4/((nrow(data)-length(model$coefficients)-1))
plot(model, which=4, cook.levels=cutoff)
plot(hatvalues(model), type = "h")
model
model2
model2 = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data[-c(1,408),])
model
model2
model2 = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data[-c(408),])
model
model2
library(multcomp)
data  = read.csv("/Users/admin/Documents/R_book/chapter3/house_prices.csv")
data  = read.csv("./house_prices.csv")
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms + number.entrances +  size_balcony  + size_entrance,data=data)
summary(glht(model,linfct = c("number.bathrooms + number.entrances - number.bedrooms = 0")))
summary(glht(model,linfct = c("size_balcony - size = 0")))
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms + number.entrances +  size_balcony  + size_entrance,data=data)
summary(model)
summary(glht(model,linfct = c("number.bathrooms + number.entrances + number.bedrooms + size_balcony + size_entrance - size  = 0")))
summary(glht(model,linfct = c("number.entrances + number.bathrooms - size_balcony - size_entrance")))
summary(glht(model,linfct = c("number.entrances + number.bathrooms - size_balcony - size_entrance = 0")))
summary(glht(model,linfct = c("number.entrances + number.bathrooms - size_balcony - size_entrance = 1")))
e1 = runif(1000)
e2    = rbeta(1000,0,1)
sales = e1 + e2 + rnorm(1000,0,e1*0.2)
sales
sales = e1 + 50*e2 + rnorm(1000,0,e1*0.2)
sales
e2
e2    = rbeta(1000,2,1)
e2
e2    = rbeta(1000,20,1)
e2
e2    = rbeta(1000,1,20)
e2
e2    = rbeta(1000,1,5)
e2
50*e2
e1
e1    = 50*runif(1000)
e1
e1*0.2
d = data.frame(people_in = e1, discount = e2,sales = sales)
d
e1    = 50*runif(1000)
e2    = rbeta(1000,1,5)
sales = e1 + 50*e2 + rnorm(1000,0,e1*0.2)
sales
d = data.frame(people_in = e1, discount = e2,sales = sales)
d
e1    = 50*runif(1000)
e2    = rbeta(1000,1,5)
sales = 10*e1 + 100*e2 + rnorm(1000,0,e1*0.2)
sales
d = data.frame(people_in = e1, discount = e2,sales = sales)
d
e1    = 50*runif(1000)
e2    = rbeta(1000,1,5)
sales = 10*e1 + 180*e2 + rnorm(1000,0,e1*0.2)
d = data.frame(people_in = e1, discount = e2,sales = sales)
d
write.csv(d,"./people_shopping.csv")
write.csv(d,"./people_shopping.csv",row.names = FALSE)
dt = read.csv("./people_shopping.csv")
dt
model = lm(Property_price ~ people_in + discount,data=data)
model = lm(sales ~ people_in + discount,data=data)
data
data = read.csv("./people_shopping.csv")
model = lm(sales ~ people_in + discount,data=data)
model
plot(model)
install.packages("lmtest")
library("lmtest")
bptest(model)
install.packages("gvlma")
library(gvlma)
gvmodel <- gvlma(model)
summary(gvmodel)
data = read.csv("./people_shopping.csv")
model = lm(sales ~ people_in + discount,data=data)
plot(model)
data = read.csv("./people_shopping.csv")
model = lm(sales ~ people_in + discount,data=data)
library("lmtest")
bptest(model)
summary(model)
install.packages("sandwich")
install.packages("sandwich")
library(sandwich)
data = read.csv("./people_shopping.csv")
model = lm(sales ~ people_in + discount,data=data)
library("lmtest")
bptest(model)
summary(model)
library(sandwich)
coeftest(model, vcov=sandwich)
bptest(model)
summary(model)
library(sandwich)
coeftest(model, vcov=sandwich)
library(caret)
distBCMod <- caret::BoxCoxTrans(data$sales)
print(distBCMod)
model = lm(sales ~ people_in + discount,data=data)
plot(model)
distBCMod
dist_new=predict(distBCMod, data$sales)
model = lm(dist_new ~ people_in + discount,data=data)
plot(model)
distBCMod <- caret::BoxCoxTrans(data$sales)
print(distBCMod)
dist_new=predict(distBCMod, data$sales)
dist_new
model = lm(dist_new ~ people_in + discount,data=data)
plot(model)
model = lm(log(data$sales) ~ people_in + discount,data=data)
plot(model)
plot(model)
coeftest(model, vcov=vcovHC(model))
data = read.csv("./people_shopping.csv")
model = lm(sales ~ people_in + discount,data=data)
library("lmtest")
bptest(model)
summary(model)
library(sandwich)
coeftest(model, vcov=vcovHC(model))
data = read.csv("./shoes_sales.csv")
library(caret)
X = data[-1]
findLinearCombos(X)
data
library(caret)
data = read.csv("./shoes_sales.csv")
data
data = read.csv("./shoes_sales.csv")
library(caret)
X = data[-1]
findLinearCombos(X)
data = read.csv("./shoes_sales.csv")
library(caret)
X = data[-1]
findLinearCombos(X)
X = as.matrix(X)
det(t(X) %*% X)
model = lm(data=data,Sales ~ women_apparel_price + male_apparel_price+ shoes_female_price + shoes_male_price +shoes_kids_prices+shoes_male_price.1+prices_shoes)
summary(model)
model = lm(data=data,Sales ~ women_apparel_price + male_apparel_price+ shoes_female_price + shoes_male_price +shoes_kids_prices+shoes_male_price_bis+prices_shoes)
str(data)
model = lm(data=data,Sales ~ women_apparel_price + male_apparel_price+ shoes_female_price + shoes_male_price +shoes_kids_prices+shoes_male_price_b+prices_shoes)
model = lm(data=data,Sales ~ women_apparel_price + male_apparel_price+ shoes_female_price + shoes_male_price +shoes_kids_prices+shoes_male_price_b+prices_shoes)
summary(model)
det(t(X[,c(-6,-7)]) %*% X[,c(-6,-7)])
vif(model)
library(car)
vif(model)
model = lm(data=data,Sales ~ women_apparel_price + male_apparel_price+ shoes_female_price + shoes_male_price +shoes_kids_prices+shoes_male_price_b+prices_shoes)
summary(model)
fixedmodel = lm(data=data,Sales ~ women_apparel_price + male_apparel_price+ shoes_female_price + shoes_male_price +shoes_kids_prices)
summary(fixedmodel)
summary(fixedmodel)
vif(fixedmodel)
aggregated_apparel    = data$women_apparel_price + data$male_apparel_price
aggregated_femalekids = data$shoes_female_price + data$shoes_kids_prices
finalmodel = lm(data=data,Sales ~  aggregated_apparel + shoes_male_price + aggregated_femalekids)
summary(finalmodel)
vif(finalmodel)
summary(finalmodel)
vif(finalmodel)
data = read.csv("./shoes_sales.csv")
model = lm(data=data,Sales ~ women_apparel_price + male_apparel_price+ shoes_female_price + shoes_male_price +shoes_kids_prices+shoes_male_price_b+prices_shoes)
summary(model)
fixedmodel = lm(data=data,Sales ~ women_apparel_price + male_apparel_price+ shoes_female_price + shoes_male_price +shoes_kids_prices)
summary(fixedmodel)
head(ols_step_all_possible(model) %>% arrange(desc(adjr)))
library("olsrr")
install.packages("olsrr")
library("olsrr")
model = lm(data=data,Sales ~ women_apparel_price + male_apparel_price+ shoes_female_price + shoes_male_price +shoes_kids_prices)
head(ols_step_all_possible(model) %>% arrange(desc(adjr)))
ols_step_forward_p(model)
library("olsrr")
library(dplyr)
data  = read.csv("./shoes_sales.csv")
model = lm(data=data,Sales ~ women_apparel_price + male_apparel_price+ shoes_female_price + shoes_male_price +shoes_kids_prices)
summary(model)
model = lm(data=data,Sales ~ women_apparel_price + male_apparel_price+ shoes_female_price + shoes_male_price +shoes_kids_prices)
head(ols_step_all_possible(model) %>% arrange(desc(adjr)))
ols_step_forward_p(model)
Boston
model = lm(data=Boston,medv ~ .)
head(ols_step_all_possible(model) %>% arrange(desc(adjr)))
ols_step_forward_p(model)
ols_step_backward_p(model)
ols_step_both_p(model)
ols_step_forward_aic(model)
ols_step_backward_aic(model)
ols_step_both_aic(model)
ols_step_forward_aic(model)
ols_step_backward_aic(model)
ols_step_both_aic(model)
getwd()
setwd("/Users/fjuretig/Documents/R_book/chapter05")
data             = read.csv("./heights.csv")
data$Sample      = as.factor(data$Sample)
wilcox.test(Height ~ Sample,data=data)
data = read.csv("./paired_scores.csv")
getwd()
data = read.csv("./pre_post_employee.csv")
wilcox.test(data$Score1, data$Score2,paired=TRUE)
wilcox.test(data$pre_bonus, data$post_bonus,paired=TRUE)
wilcox.test(data$pre_bonus, data$post_bonus,paired=TRUE)
data = read.csv("./pre_post_employee.csv")
t.test(data$Score2,data$Score1,conf.level = .95,alternative="greater",paired=TRUE)
t.test(data$post_bonus,data$pre_bonus,conf.level = .95,alternative="greater",paired=TRUE)
t.test(data$post_bonus,data$pre_bonus,conf.level = .95,alternative="less",paired=TRUE)
t.test(data$post_bonus,data$pre_bonus,conf.level = .95,alternative="greater",paired=TRUE)
t.test(data$post_bonus,data$pre_bonus,conf.level = .95,alternative="less",paired=TRUE)
