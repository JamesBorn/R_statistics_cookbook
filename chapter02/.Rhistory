leveragePlots(model)
library(car)
data = read.csv("./house_prices_aug.csv")
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
leveragePlots(model)
data = read.csv("./house_prices_aug.csv")
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
leveragePlots(model)
data = read.csv("./house_prices_aug.csv")
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
leveragePlots(model)
View(data)
data = read.csv("./house_prices_aug.csv")
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
leveragePlots(model)
outlierTest(model)
plot(hatvalues(model), type = "h")
cooksd <- sort(cooks.distance(model))
cutoff <- 4/((nrow(data)-length(model$coefficients)-1))
plot(model, which=4, cook.levels=cutoff)
plot(model)
data = read.csv("./house_prices_aug.csv")
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
leveragePlots(model)
outlierTest(model)
plot(hatvalues(model), type = "h")
cooksd <- sort(cooks.distance(model))
cutoff <- 4/((nrow(data)-length(model$coefficients)-1))
plot(model, which=4, cook.levels=cutoff)
plot(model)
data = read.csv("./house_prices_aug.csv")
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
leveragePlots(model)
outlierTest(model)
plot(hatvalues(model), type = "h")
cooksd <- sort(cooks.distance(model))
cutoff <- 4/((nrow(data)-length(model$coefficients)-1))
plot(model, which=4, cook.levels=cutoff)
plot(model)
data = read.csv("./house_prices_aug.csv")
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
leveragePlots(model)
outlierTest(model)
plot(hatvalues(model), type = "h")
cooksd <- sort(cooks.distance(model))
cutoff <- 4/((nrow(data)-length(model$coefficients)-1))
plot(model, which=4, cook.levels=cutoff)
plot(model)
plot(model)
leveragePlots(model)
data = read.csv("./house_prices_aug.csv")
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
plot(model)
leveragePlots(model)
View(data)
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
plot(model)
leveragePlots(model)
outlierTest(model)
plot(hatvalues(model), type = "h")
cooksd <- sort(cooks.distance(model))
cutoff <- 4/((nrow(data)-length(model$coefficients)-1))
plot(model, which=4, cook.levels=cutoff)
data = read.csv("./house_prices_aug.csv")
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
plot(model)
leveragePlots(model)
outlierTest(model)
View(leveragePlots)
help(leveragePlots)
leveragePlots(model)
plot(model)
outlierTest(model)
plot(hatvalues(model), type = "h")
cooksd <- sort(cooks.distance(model))
cutoff <- 4/((nrow(data)-length(model$coefficients)-1))
plot(model, which=4, cook.levels=cutoff)
model2 = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data[-408,])
model
model2
summary(model2)
model
model2
View(data)
model
model2
plot(model)
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
plot(model)
predict(model,data[1,])
data[1,]
data = read.csv("./house_prices_aug.csv")
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
plot(model)
data = read.csv("./house_prices_aug.csv")
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
plot(model)
leveragePlots(model)
library(car)
data = read.csv("./house_prices_aug.csv")
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data)
plot(model)
leveragePlots(model)
outlierTest(model)
cooksd <- sort(cooks.distance(model))
cutoff <- 4/((nrow(data)-length(model$coefficients)-1))
plot(model, which=4, cook.levels=cutoff)
plot(hatvalues(model), type = "h")
model
model2
model2 = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data[-c(1,408),])
model
model2
model2 = lm(Property_price ~ size + number.bathrooms + number.bedrooms +number.entrances +size_balcony  +size_entrance,data=data[-c(408),])
model
model2
library(multcomp)
data  = read.csv("/Users/admin/Documents/R_book/chapter3/house_prices.csv")
data  = read.csv("./house_prices.csv")
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms + number.entrances +  size_balcony  + size_entrance,data=data)
summary(glht(model,linfct = c("number.bathrooms + number.entrances - number.bedrooms = 0")))
summary(glht(model,linfct = c("size_balcony - size = 0")))
model = lm(Property_price ~ size + number.bathrooms + number.bedrooms + number.entrances +  size_balcony  + size_entrance,data=data)
summary(model)
summary(glht(model,linfct = c("number.bathrooms + number.entrances + number.bedrooms + size_balcony + size_entrance - size  = 0")))
summary(glht(model,linfct = c("number.entrances + number.bathrooms - size_balcony - size_entrance")))
summary(glht(model,linfct = c("number.entrances + number.bathrooms - size_balcony - size_entrance = 0")))
summary(glht(model,linfct = c("number.entrances + number.bathrooms - size_balcony - size_entrance = 1")))
e1 = runif(1000)
e2    = rbeta(1000,0,1)
sales = e1 + e2 + rnorm(1000,0,e1*0.2)
sales
sales = e1 + 50*e2 + rnorm(1000,0,e1*0.2)
sales
e2
e2    = rbeta(1000,2,1)
e2
e2    = rbeta(1000,20,1)
e2
e2    = rbeta(1000,1,20)
e2
e2    = rbeta(1000,1,5)
e2
50*e2
e1
e1    = 50*runif(1000)
e1
e1*0.2
d = data.frame(people_in = e1, discount = e2,sales = sales)
d
e1    = 50*runif(1000)
e2    = rbeta(1000,1,5)
sales = e1 + 50*e2 + rnorm(1000,0,e1*0.2)
sales
d = data.frame(people_in = e1, discount = e2,sales = sales)
d
e1    = 50*runif(1000)
e2    = rbeta(1000,1,5)
sales = 10*e1 + 100*e2 + rnorm(1000,0,e1*0.2)
sales
d = data.frame(people_in = e1, discount = e2,sales = sales)
d
e1    = 50*runif(1000)
e2    = rbeta(1000,1,5)
sales = 10*e1 + 180*e2 + rnorm(1000,0,e1*0.2)
d = data.frame(people_in = e1, discount = e2,sales = sales)
d
write.csv(d,"./people_shopping.csv")
write.csv(d,"./people_shopping.csv",row.names = FALSE)
dt = read.csv("./people_shopping.csv")
dt
model = lm(Property_price ~ people_in + discount,data=data)
model = lm(sales ~ people_in + discount,data=data)
data
data = read.csv("./people_shopping.csv")
model = lm(sales ~ people_in + discount,data=data)
model
plot(model)
install.packages("lmtest")
library("lmtest")
bptest(model)
install.packages("gvlma")
library(gvlma)
gvmodel <- gvlma(model)
summary(gvmodel)
data = read.csv("./people_shopping.csv")
model = lm(sales ~ people_in + discount,data=data)
plot(model)
data = read.csv("./people_shopping.csv")
model = lm(sales ~ people_in + discount,data=data)
library("lmtest")
bptest(model)
summary(model)
install.packages("sandwich")
install.packages("sandwich")
library(sandwich)
data = read.csv("./people_shopping.csv")
model = lm(sales ~ people_in + discount,data=data)
library("lmtest")
bptest(model)
summary(model)
library(sandwich)
coeftest(model, vcov=sandwich)
bptest(model)
summary(model)
library(sandwich)
coeftest(model, vcov=sandwich)
library(caret)
distBCMod <- caret::BoxCoxTrans(data$sales)
print(distBCMod)
model = lm(sales ~ people_in + discount,data=data)
plot(model)
distBCMod
dist_new=predict(distBCMod, data$sales)
model = lm(dist_new ~ people_in + discount,data=data)
plot(model)
distBCMod <- caret::BoxCoxTrans(data$sales)
print(distBCMod)
dist_new=predict(distBCMod, data$sales)
dist_new
model = lm(dist_new ~ people_in + discount,data=data)
plot(model)
model = lm(log(data$sales) ~ people_in + discount,data=data)
plot(model)
plot(model)
coeftest(model, vcov=vcovHC(model))
data = read.csv("./people_shopping.csv")
model = lm(sales ~ people_in + discount,data=data)
library("lmtest")
bptest(model)
summary(model)
library(sandwich)
coeftest(model, vcov=vcovHC(model))
data = read.csv("./shoes_sales.csv")
library(caret)
X = data[-1]
findLinearCombos(X)
data
library(caret)
data = read.csv("./shoes_sales.csv")
data
data = read.csv("./shoes_sales.csv")
library(caret)
X = data[-1]
findLinearCombos(X)
data = read.csv("./shoes_sales.csv")
library(caret)
X = data[-1]
findLinearCombos(X)
X = as.matrix(X)
det(t(X) %*% X)
model = lm(data=data,Sales ~ women_apparel_price + male_apparel_price+ shoes_female_price + shoes_male_price +shoes_kids_prices+shoes_male_price.1+prices_shoes)
summary(model)
model = lm(data=data,Sales ~ women_apparel_price + male_apparel_price+ shoes_female_price + shoes_male_price +shoes_kids_prices+shoes_male_price_bis+prices_shoes)
str(data)
model = lm(data=data,Sales ~ women_apparel_price + male_apparel_price+ shoes_female_price + shoes_male_price +shoes_kids_prices+shoes_male_price_b+prices_shoes)
model = lm(data=data,Sales ~ women_apparel_price + male_apparel_price+ shoes_female_price + shoes_male_price +shoes_kids_prices+shoes_male_price_b+prices_shoes)
summary(model)
det(t(X[,c(-6,-7)]) %*% X[,c(-6,-7)])
vif(model)
library(car)
vif(model)
model = lm(data=data,Sales ~ women_apparel_price + male_apparel_price+ shoes_female_price + shoes_male_price +shoes_kids_prices+shoes_male_price_b+prices_shoes)
summary(model)
fixedmodel = lm(data=data,Sales ~ women_apparel_price + male_apparel_price+ shoes_female_price + shoes_male_price +shoes_kids_prices)
summary(fixedmodel)
summary(fixedmodel)
vif(fixedmodel)
aggregated_apparel    = data$women_apparel_price + data$male_apparel_price
aggregated_femalekids = data$shoes_female_price + data$shoes_kids_prices
finalmodel = lm(data=data,Sales ~  aggregated_apparel + shoes_male_price + aggregated_femalekids)
summary(finalmodel)
vif(finalmodel)
summary(finalmodel)
vif(finalmodel)
data = read.csv("./shoes_sales.csv")
model = lm(data=data,Sales ~ women_apparel_price + male_apparel_price+ shoes_female_price + shoes_male_price +shoes_kids_prices+shoes_male_price_b+prices_shoes)
summary(model)
fixedmodel = lm(data=data,Sales ~ women_apparel_price + male_apparel_price+ shoes_female_price + shoes_male_price +shoes_kids_prices)
summary(fixedmodel)
head(ols_step_all_possible(model) %>% arrange(desc(adjr)))
library("olsrr")
install.packages("olsrr")
library("olsrr")
model = lm(data=data,Sales ~ women_apparel_price + male_apparel_price+ shoes_female_price + shoes_male_price +shoes_kids_prices)
head(ols_step_all_possible(model) %>% arrange(desc(adjr)))
ols_step_forward_p(model)
library("olsrr")
library(dplyr)
data  = read.csv("./shoes_sales.csv")
model = lm(data=data,Sales ~ women_apparel_price + male_apparel_price+ shoes_female_price + shoes_male_price +shoes_kids_prices)
summary(model)
model = lm(data=data,Sales ~ women_apparel_price + male_apparel_price+ shoes_female_price + shoes_male_price +shoes_kids_prices)
head(ols_step_all_possible(model) %>% arrange(desc(adjr)))
ols_step_forward_p(model)
Boston
model = lm(data=Boston,medv ~ .)
head(ols_step_all_possible(model) %>% arrange(desc(adjr)))
ols_step_forward_p(model)
ols_step_backward_p(model)
ols_step_both_p(model)
ols_step_forward_aic(model)
ols_step_backward_aic(model)
ols_step_both_aic(model)
ols_step_forward_aic(model)
ols_step_backward_aic(model)
ols_step_both_aic(model)
getwd()
setwd("/Users/fjuretig/Documents/R_book/chapter05")
data             = read.csv("./heights.csv")
data$Sample      = as.factor(data$Sample)
wilcox.test(Height ~ Sample,data=data)
data = read.csv("./paired_scores.csv")
getwd()
data = read.csv("./pre_post_employee.csv")
wilcox.test(data$Score1, data$Score2,paired=TRUE)
wilcox.test(data$pre_bonus, data$post_bonus,paired=TRUE)
wilcox.test(data$pre_bonus, data$post_bonus,paired=TRUE)
data = read.csv("./pre_post_employee.csv")
t.test(data$Score2,data$Score1,conf.level = .95,alternative="greater",paired=TRUE)
t.test(data$post_bonus,data$pre_bonus,conf.level = .95,alternative="greater",paired=TRUE)
t.test(data$post_bonus,data$pre_bonus,conf.level = .95,alternative="less",paired=TRUE)
t.test(data$post_bonus,data$pre_bonus,conf.level = .95,alternative="greater",paired=TRUE)
t.test(data$post_bonus,data$pre_bonus,conf.level = .95,alternative="less",paired=TRUE)
data             = read.csv("./heights.csv")
data$Sample = as.factor(data$Sample)
wilcox.test(Height ~ Sample,data=data)
data = read.csv("./pre_post_employee.csv")
wilcox.test(data$post_bonus, data$pre_bonus,paired=TRUE)
library(FSA)
library(dplyr)
t     = read.csv("./anova__lot_type.csv")
kruskal.test(Result ~ Food.Type,data=t)
dunnTest(Result ~ Food.Type,data=t)
library(FSA)
library(dplyr)
t     = read.csv("./anova__lot_type.csv")
kruskal.test(Result ~ Food.Type,data=t)
dunnTest(Result ~ Food.Type,data=t)
library(FSA)
library(dplyr)
t     = read.csv("./anova__lot_type.csv")
kruskal.test(Result ~ Food.Type,data=t)
dunnTest(Result ~ Food.Type,data=t)
library(FSA)
x = seq(1,100)
y = 20/(1+exp(x-50))
plot(x,y)
cor.test( ~ x + y, method = "spearman",conf.level = 0.95)
cor.test( ~ x + y, method = "pearson",conf.level = 0.95)
x = seq(1,100)
y = sapply(x,function(x){(runif(1)-0.5)*10 + 20/(1+exp(x-50))})
plot(x,y)
cor.test( ~ x + y, method = "spearman",conf.level = 0.95)
cor.test( ~ x + y, method = "pearson",conf.level = 0.95)
salary=c(10,50,45,87,69,100)
educ_level=c(1,2,3,4,5,6)
cor.test( ~ salary + educ_level, method = "spearman",conf.level = 0.95)
data = read.csv("./price__sales.csv")
model_loess1 = loess(data$sales~data$price,  span = 2/3, degree = 2, family = c("gaussian"))
model_loess2 = loess(data$sales~data$price,  span = 0.1, degree = 2, family = c("gaussian"))
data   = read.csv("./house_prices.csv")
data   = read.csv("./house_prices.csv")
getwd()
setwd("/Users/fjuretig/Documents/R_book/chapter02")
library(dplyr)
library(car)
data        = read.csv("./heights.csv")
data$Sample = as.factor(data$Sample)
leveneTest(Height ~ Sample,data)
sample1 = data %>% filter(Sample==1) %>% select(Height)
sample2 = data %>% filter(Sample==2) %>% select(Height)
t.test(sample1,sample2,var.equal=TRUE,conf.level = .95,alternative="two.sided")
calc_effective_alphas <- function(n,sd1,sd2,equalvar){
rejected <- 0
for (x in 1:100000){
data1 <- rnorm(n,10,sd1)
data2 <- rnorm(n,10,sd2)
result <- t.test(data1,data2,var.equal=equalvar)$p.value
if (result < 0.05){
rejected <- rejected + 1
}
}
return (rejected/100000)
}
print(paste("n=10 / sd1=2 / sd2=5 / effective alpha=",calc_effective_alphas(10,2,5,TRUE)))
data = read.csv("./pre_post_employee.csv")
t.test(data$post_bonus,data$pre_bonus,conf.level = .95,alternative="greater",paired=TRUE)
t.test(data$post_bonus,data$pre_bonus,conf.level = .95,alternative="less",paired=TRUE)
data = read.csv("./anova__lot_type.csv")
result = lm(Result ~ Lot,data=data)
SS_LOT = sum((predict(result)-mean(data$Result))**2)
result      = lm(Result ~ Lot + Food.Type,data=data)
SS_FOODTYPE = sum((predict(result)-mean(data$Result))**2) - SS_LOT
SS_ERROR = sum((predict(result)-data$Result)**2)
FF_LOT        = (SS_LOT/1)/(SS_ERROR/59)
FF_FOODTYPE   = (SS_FOODTYPE/3)/(SS_ERROR/59)
pval_LOT      = 1-pf(FF_LOT,1,59)
pval_FOODTYPE = 1-pf(FF_FOODTYPE,3,59)
print(paste("SS(ERROR) = ",SS_ERROR))
print(paste("SS(LOT) =",SS_LOT,"/F(LOT) = ",SS_LOT,"pvalue = ",pval_LOT))
print(paste("SS(FOODTYPE) =",SS_FOODTYPE,"/F(FOODTYPE) = ",SS_FOODTYPE,"pvalue = ",pval_FOODTYPE))
anova(result)
data = read.csv("./anova__lot_type.csv")
result = lm(Result ~ Lot,data=data)
SS_LOT = sum((predict(result)-mean(data$Result))**2)
result      = lm(Result ~ Lot + Food.Type,data=data)
SS_FOODTYPE = sum((predict(result)-mean(data$Result))**2) - SS_LOT
SS_ERROR = sum((predict(result)-data$Result)**2)
FF_LOT        = (SS_LOT/1)/(SS_ERROR/59)
FF_FOODTYPE   = (SS_FOODTYPE/3)/(SS_ERROR/59)
pval_LOT      = 1-pf(FF_LOT,1,59)
pval_FOODTYPE = 1-pf(FF_FOODTYPE,3,59)
print(paste("SS(ERROR) = ",SS_ERROR))
print(paste("SS(LOT) =",SS_LOT,"/F(LOT) = ",SS_LOT,"pvalue = ",pval_LOT))
print(paste("SS(FOODTYPE) =",SS_FOODTYPE,"/F(FOODTYPE) = ",SS_FOODTYPE,"pvalue = ",pval_FOODTYPE))
anova(result)
data = read.csv("./2wayanova.csv")
d = aov(Sales ~ Colour + Font + Font*Colour,data=data )
plot(d, 2)
shapiro.test(residuals(d))
data = data[-c(22,44),]
d = aov(Sales ~ Colour + Font + Font*Colour,data=data )
plot(d, 2)
shapiro.test(residuals(d))
plot(d, 1)
anova(d)
rbind(TukeyHSD(d)$Colour,TukeyHSD(d)$Font)
data = read.csv("./2wayanova.csv")
d = aov(Sales ~ Colour + Font + Font*Colour,data=data )
plot(d, 2)
shapiro.test(residuals(d))
data = data[-c(22,44),]
d = aov(Sales ~ Colour + Font + Font*Colour,data=data )
plot(d, 2)
shapiro.test(residuals(d))
plot(d, 1)
anova(d)
rbind(TukeyHSD(d)$Colour,TukeyHSD(d)$Font)
library(dplyr)
library(car)
r = read.csv("./2wayanova.csv")
r = r[-c(22,44),]
type1 = aov(Sales ~ Colour + Font + Font*Colour,data=r )
summary(type1)
type2 = Anova(aov(Sales ~ Colour + Font,data=r ),type=c("II"))
type2
options(contrasts = c("contr.sum","contr.poly"))
type3 = Anova(aov(Sales ~ Colour + Font + Font*Colour,data=r ),type=c("III"))
type3
library(lme4)
library(lmerTest)
library(lsmeans)
clients <- read.csv("./clients.csv")
E = lmer(Sales ~ -1 + Strategy + (1|Client) + (1|Salesman),data=clients)
summary(E)
result_lsmeans = lsmeans(E,pairwise ~ Strategy)
print(result_lsmeans)
anova(E)
library(lme4)
library(lmerTest)
library(lsmeans)
clients <- read.csv("./clients.csv")
E = lmer(Sales ~ -1 + Strategy + (1|Client) + (1|Salesman),data=clients)
summary(E)
result_lsmeans = lsmeans(E,pairwise ~ Strategy)
print(result_lsmeans)
anova(E)
library(ggplot2)
library(nlme)
library(lmerTest)
library(lsmeans)
data_company = read.csv("./employee_time_bonus.csv",stringsAsFactors = TRUE)
ggplot(data_company,aes(x=Time,y=Performance)) + geom_line() +
geom_point(data=data_company,aes(x=Time,y=Performance)) +
facet_wrap(~Employee,nrow=3)
fit <- lme(Performance ~ x_Bonus + x_Sector + Time + Time:x_Bonus , random = list( ~1 |Employee) , correlation = corAR1(form= ~Time|Employee), data = data_company)
summary(fit)
anova(fit)
fit <- lme(Performance ~ x_Bonus + x_Sector + Time + Time:x_Bonus , random = list( ~1 |Employee) , data = data_company)
summary(fit)
fit <- lme(Performance ~ x_Bonus + x_Sector + Time , random = list( ~1 |Employee) , correlation = corAR1(form= ~Time|Employee), data = data_company)
print(lsmeans(fit,pairwise ~ x_Bonus))
fit <- lme(Performance ~ x_Bonus + x_Sector + Time + Time:x_Bonus , random = list( ~1 + Time |Employee) , correlation = corAR1(form= ~Time|Employee), data = data_company)
summary(fit)
library(MASS)
library(Hotelling)
class1 = read.csv("./class1.csv")
class2 = read.csv("./class2.csv")
sapply(class1,mean)
sapply(class2,mean)
test_hotelling = hotelling.test(class1,class2)
print(test_hotelling)
library(heplots)
class1$group = "1"
class2$group = "2"
combined = rbind(class1,class2)
combined$group = as.factor(combined$group)
boxM(cbind(combined$Math,combined$History,combined$Sociology)~group,data = combined)
library(MASS)
f = matrix(c(2,1,1,1,2,1,1,1,2),3,3)
x1 = mvrnorm(50,c(10,10,10),f)
x1 = cbind(x1,1)
x2 = mvrnorm(50,c(10,10,10),f)
x2 = cbind(x2,2)
x3 = mvrnorm(50,c(30,10,10),f)
x3 = cbind(x3,3)
total_data = data.frame(rbind(x1,x2,x3))
colnames(total_data) = c("History","Math","Biology","class")
result = manova(cbind(History,Math,Biology) ~ class,data=total_data)
summary(result)
summary.aov(result)
